load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")

go_library(
    name = "clicommand",
    srcs = [
        "acknowledgements.go",
        "agent_start.go",
        "annotate.go",
        "annotation_remove.go",
        "artifact_download.go",
        "artifact_search.go",
        "artifact_shasum.go",
        "artifact_upload.go",
        "bootstrap.go",
        "doc.go",
        "env_dump.go",
        "global.go",
        "meta_data_exists.go",
        "meta_data_get.go",
        "meta_data_keys.go",
        "meta_data_set.go",
        "oidc_request_token.go",
        "pipeline_upload.go",
        "profiler.go",
        "step_get.go",
        "step_update.go",
    ],
    embedsrcs = ["ACKNOWLEDGEMENTS.md.gz"],
    importpath = "github.com/buildkite/agent/v3/clicommand",
    visibility = ["//visibility:public"],
    deps = [
        "//agent",
        "//api",
        "//bootstrap",
        "//bootstrap/shell",
        "//cliconfig",
        "//env",
        "//experiments",
        "//hook",
        "//logger",
        "//metrics",
        "//process",
        "//redaction",
        "//status",
        "//stdin",
        "//tracetools",
        "//utils",
        "//version",
        "@com_github_buildkite_roko//:roko",
        "@com_github_buildkite_shellwords//:shellwords",
        "@com_github_oleiade_reflections//:reflections",
        "@com_github_urfave_cli//:cli",
        "@org_golang_x_exp//maps",
    ],
)

go_test(
    name = "clicommand_test",
    srcs = [
        "agent_start_test.go",
        "annotate_test.go",
        "artifact_shasum_test.go",
    ],
    embed = [":clicommand"],
    deps = [
        "//logger",
        "@com_github_stretchr_testify//assert",
    ],
)

alias(
    name = "go_default_library",
    actual = ":clicommand",
    visibility = ["//visibility:public"],
)
